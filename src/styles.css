/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

:root {
  --animation-duration-flip: 10000ms;
  --animation-bg-layout-duration: 0s;
  --animation-bg-layout-delay: 2000ms;
  --bg-color: ;
  --bg-gradient: linear-gradient(
    190deg,
    hsla(290, 50%, 8%) 0%,
    hsla(290, 50%, 8%, 0.978) 9.5%,
    hsla(290, 50%, 8%, 0.925) 17.7%,
    hsla(290, 50%, 8%, 0.857) 24.7%,
    hsla(290, 50%, 8%, 0.781) 31%,
    hsla(290, 50%, 8%, 0.701) 36.8%,
    hsla(290, 50%, 8%, 0.62) 42.3%,
    hsla(290, 50%, 8%, 0.538) 47.6%,
    hsla(290, 50%, 8%, 0.455) 52.9%,
    hsla(290, 50%, 8%, 0.373) 58.2%,
    hsla(290, 50%, 8%, 0.291) 63.7%,
    hsla(290, 50%, 8%, 0.212) 69.5%,
    hsla(290, 50%, 8%, 0.138) 75.8%,
    hsla(290, 50%, 8%, 0.07) 82.9%,
    hsla(290, 50%, 8%, 0.019) 91.2%,
    hsla(290, 50%, 8%, 0) 100%
  );
  --bg-glow: linear-gradient(
    hsl(283, 77%, 31%) 0%,
    hsla(283, 77%, 31%, 0.978) 9.5%,
    hsla(283, 77%, 31%, 0.925) 17.7%,
    hsla(283, 77%, 31%, 0.857) 24.7%,
    hsla(283, 77%, 31%, 0.781) 31%,
    hsla(283, 77%, 31%, 0.701) 36.8%,
    hsla(283, 77%, 31%, 0.62) 42.3%,
    hsla(283, 77%, 31%, 0.538) 47.6%,
    hsla(283, 77%, 31%, 0.455) 52.9%,
    hsla(283, 77%, 31%, 0.373) 58.2%,
    hsla(283, 77%, 31%, 0.291) 63.7%,
    hsla(283, 77%, 31%, 0.212) 69.5%,
    hsla(283, 77%, 31%, 0.138) 75.8%,
    hsla(283, 77%, 31%, 0.07) 82.9%,
    hsla(283, 77%, 31%, 0.019) 91.2%,
    hsla(283, 77%, 31%, 0) 100%
  );
  --active-bg-gradient: linear-gradient(
    130deg,
    rgba(148, 148, 206, 0.9) 30%,
    rgba(5, 4, 56, 0.5) 45%,
    rgba(0, 77, 64, 0.8) 75%,
    rgba(0, 212, 255, 1) 100%
  );
  --body-bg-gradient: linear-gradient(
    90deg,
    rgba(1, 0, 36, 1) 0%,
    rgba(0, 77, 64, 1) 77%,
    rgba(0, 212, 255, 1) 100%
  );
  --pulse-bg-gradient: rgba(205, 174, 236, 0.99)
    radial-gradient(circle, transparent 1%, rgba(255, 255, 255, 0.9) 1%)
    center/0%;
  --shine-bg-gradient: linear-gradient(
    75deg,
    transparent 10%,
    rgba(255, 255, 255, 0.2) 90%,
    transparent 10%
  );
  --active-box-shadow: -0.28em 1.25em 0em 0em rgba(0, 0, 0, 0.5),
    -0.38em 0 0 chocolate, inset 0.1em 0 0 chocolate,
    inset -0.3em 0 0em 0em rgba(0, 0, 0, 0.5),
    0.1em 2em 1.5em rgba(0, 0, 0, 0.8),
    inset -0.5em -0.1em 0 rgba(255, 255, 255, 0.8);
  --grid-item-width: 10vw;
  --grid-item-height: 11vw;
}

html,
body {
  margin: 0em;
  padding: 0em;
  min-height: 100vh;

  font-family: sans-serif;
  font-size: 16px;
  scroll-behavior: smooth;
  /* overflow-y: visible;
  overflow-x: visible; */
  /* overscroll-behavior: none; */
}

body {
  background: var(--body-bg-gradient);
}

/* added on pointer down event */
/* min-height: 200vh; */
/* overflow-y: hidden; */
/* background: inherit; */
.active-body {
  background-image: var(--active-bg-gradient);
  /* background-size: 100vw 100vw; */

  /* margin-bottom: 0; */
  /* contain: paint; */
}

/* body.active-body::before {
  content: "";
  position: absolute;
  z-index: 0;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  background: var(--bg-gradient);
  animation: 20s glow ease-in-out infinite 0ms;
} */

/****************************
      Buttons
****************************/
button {
  outline: none;
  border: none;
  border-style: none;
  cursor: pointer;
}

.btn {
  font-size: 2.25vw;
  z-index: 999;
  padding: 0.75em 0.5em;
  border-radius: 0.5em;
  word-wrap: normal;
  overflow: hidden;
  box-shadow: -0.2em 0.25em 0.25rem 0 rgba(0, 0, 0, 0.3);
  transition: background 400ms,
    opacity var(--animation-duration-flip) linear var(--animation-duration-flip);
  color: rgba(231, 218, 218, 0.795);
  background-color: hsla(280, 5%, 12%, 0.95);
}
.change-view {
  position: sticky;
  top: 20%;
  left: 80%;
  opacity: 0;
  width: max-content;
}
.btn.change-view:hover {
  transform: scale(1.05);
  background-color: hsla(280, 5%, 12%, 0.8);
}

.btn.dark-mode {
  position: sticky;
  top: 20%;
  left: 5%;
  width: max-content;
}

.btn.dark-mode:hover {
  transform: scale(1.05);
  background-color: hsla(280, 5%, 12%, 0.8);
}

/* https://css-tricks.com/how-to-recreate-the-ripple-effect-of-material-design-buttons/ */

span.ripple {
  position: absolute; /* The absolute position we mentioned earlier */
  border-radius: 50%;
  transform: scale(0);
  animation: ripple 600ms linear;
  background-color: rgba(230, 204, 204, 0.75);
}

@keyframes ripple {
  to {
    transform: scale(4);
    opacity: 0;
  }
}

/****************************
      End Buttons
****************************/

.fullscreen-video {
  z-index: -10;
  width: 100%;
  /* transform: translateX(10%); */
  height: 100%;
  position: absolute;
  object-fit: cover;
  border-radius: 2em;
  /* z-index: 0; */
  opacity: 0.8;
  /* animation: videofade calc(var(--animation-bg-layout-duration) / 2.2)
    cubic-bezier(0.25, 0.46, 0.45, 0.94)
    calc(var(--animation-bg-layout-delay) / 2) 1 forwards; */
  animation: videofade calc(var(--animation-bg-layout-duration) * 1.25) linear
    calc(var(--animation-bg-layout-delay) / 2) 1 forwards;
  /* transition: opacity 10s cubic-bezier(0.25, 0.46, 0.45, 0.94); */
}
@keyframes videofade {
  10% {
    opacity: 0;
  }
  20% {
    opacity: 0.8;
  }
  30% {
    opacity: 0;
  }
  40% {
    opacity: 0.8;
  }
  50% {
    opacity: 0;
  }
  70% {
    opacity: 0.8;
  }
  80% {
    opacity: 0;
  }
  90% {
    opacity: 0.2;
  }
  100% {
    opacity: 0.2;
  }
}

.bg-overlay {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 1);
  opacity: 1;
  z-index: -9;
  animation: videofade var(--animation-bg-layout-duration) linear
    var(--animation-bg-layout-delay) 1 forwards;
}
/* cubic-bezier(0.25, 0.46, 0.45, 0.94) */
@keyframes fadeout {
  10% {
    opacity: 0.85;
  }
  20% {
    opacity: 1;
  }
  30% {
    opacity: 0.5;
  }
  40% {
    opacity: 1;
  }
  50% {
    opacity: 0.75;
  }
  60% {
    opacity: 1;
  }
  80% {
    opacity: 0.5;
  }
  90% {
    opacity: 0.3;
    /* z-index: -9; */
  }
  95% {
    opacity: 0.1;
    z-index: 0;
  }
  100% {
    opacity: 0;
    /* z-index: -9; */
  }
}

/* Page Wrapper */
.page-wrapper {
  /* display: grid;
  place-content: center;
  justify-content: center;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr; */
  /* height: 100vw;
  padding: 3vw; */
  /* height: 100vw; */
  padding: 40vw 2vw;
  height: auto;
  margin: auto auto;
}

section {
  /* background: transparent; */
  font-size: inherit;
  display: grid;
  place-content: center;
  justify-content: center;
  grid-template-columns: 1fr;
  /* grid-template-rows: 1fr; */
  /* height: 100vw;
  padding: 3vw; */
  /* max-height: 100vw; */
  /* height: clamp(100vw, 100vh, 100vh); */
  /* transform: translateY(45%); */
  /* height: 100vw; */
  /* height: auto; */
  width: 100%;
  padding: 1vw 2vw;
}

/* The Grid */
/* grid-template-columns: repeat(auto-fit, minmax(19em, 1fr)); */
/* grid-auto-rows: minmax(3.125em, auto); */
.grid-container {
  background-color: rgba(236, 227, 227, 0.2);
  background-image: url("./Icons/digital-device-mockup/phone-mock-rotated.svg");
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  z-index: 5;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-gap: 3vw;
  grid-template-rows: repeat(3, 1fr);
  place-items: center;
  justify-content: center;
  /* outline: 0.5vw solid rgba(194, 189, 231, 0.3); */
  border: 1vw outset rgba(194, 189, 231, 0.418);
  box-shadow: var(--active-box-shadow);
  /* box-shadow: 0em -0.625em 0.625em 12.5em rgba(156, 78, 78, 0.2); */
  padding: 3.2vw 3vw 3.2vw 6vw;
  border-radius: 3.125em;
  pointer-events: none;
  /* transform: translateY(50%) rotate(90deg); */
  transform: rotateZ(90deg);
  transform-style: preserve-3d;
  transition: transform 1s linear 300ms;
  /* will-change: transform; */
  position: relative;
  opacity: 0;
  animation: showGridContainer calc(var(--animation-bg-layout-duration) / 4)
    ease calc(var(--animation-bg-layout-delay) / 2) forwards;
}

@keyframes showGridContainer {
  40% {
    background-color: rebeccapurple;
  }
  60% {
    background-color: crimson;
  }
  80% {
    background-color: chocolate;
  }
  100% {
    opacity: 1;
    background-color: initial;
  }
}

.grid-container::after {
  content: "";
  position: absolute;
  /* top: 0%;
  left: -1vw;
  width: 105vw;
  height: 100vh; */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: var(--bg-gradient);
  overflow: hidden;
  opacity: 0;
  transition: opacity var(--animation-duration-flip) ease;
  z-index: -1;
  border-radius: inherit;
  pointer-events: none;
}

.grid-item {
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity calc(var(--animation-bg-layout-duration) / 4)
    cubic-bezier(0.25, 0.46, 0.45, 0.94)
    calc(var(--animation-bg-layout-duration) * 0.75);
  /* box-shadow: -0.31em 3.15em 30em 0.625em rgba(102, 51, 153, 0.8); */
  border-radius: 1.25em;
  height: var(--grid-item-height);
  width: var(--grid-item-width);
  touch-action: none;
  user-select: none;
  cursor: grab;
  pointer-events: visible;
  z-index: 0;
}

.grid-item img {
  transition: transform 2000ms cubic-bezier(0.445, 0.05, 0.55, 0.95);
  transform: rotate(-90deg);
  opacity: 1;
  user-select: none;
  touch-action: none;
  /* will-change: transform; */
}

/* active states activated on pointer down event */
.grid-container.active {
  transform: perspective(157em) rotateX(45deg) rotateZ(0deg)
    scale3d(0.95, 1.1, 2) translate3d(0em, -7.5em, -3.5em);
  transition: transform 2000ms ease-in-out 30ms;
}

/* For Shine */
.active:before {
  content: "";
  position: absolute;
  top: 0%;
  left: 0%;
  width: 100%;
  height: 100%;
  animation: 2200ms shine cubic-bezier(0.445, 0.05, 0.55, 0.95) 1 250ms;
  border-radius: inherit;
}

.active .grid-item {
  font-size: inherit;
  box-shadow: 0.1em 0.3em 0em 0.125em rgba(255, 237, 237, 0.1);
}

.active .grid-item img {
  /* transition: transform 750ms ease; */
  transition: transform 2000ms cubic-bezier(0.445, 0.05, 0.55, 0.95);
  transform: rotate(0) translate3d(0em, -0.2em, 6.25em);
  /* will-change: transform; */
}

/* add on pointer down and remove on pointer up */
.dragging-active-item-down {
  cursor: grabbing;
  pointer-events: none;
  transform: rotate(-5deg) scale(1.25);
  animation: pulse var(--animation-duration-flip) 1;
  /* will-change: transform; */
}

/* add on pointer move after cloning and remove on pointer up */
.dragging-active-item-move {
  position: absolute;
  z-index: 999;
  top: auto;
  left: auto;
  /* will-change: left, top; */
}

/* grid items animation on pointer down and romoved on move and/or pointer up */
.pulse {
  animation: pulse var(--animation-duration-flip) infinite;
  /* will-change: transform, border; */
  border: inherit;
}

@keyframes pulse {
  0% {
    transform: rotate(-0.75deg);
    border-left: 5px solid rgb(102, 51, 153);
  }
  25% {
    transform: rotate(0.75deg);
    border-bottom: 5px solid rebeccapurple;
  }
  50% {
    transform: rotate(-0.75deg) scale(1.02);
    border-right: 5px solid rebeccapurple;
  }
  75% {
    transform: rotate(-0.75deg);
    border-top: 5px solid rebeccapurple;
  }
  100% {
    transform: rotate(0.75deg);
    border: 5px solid transparent;
    background: var(--pulse-bg-gradient);
  }
}

/* pulse other grid items on move */
.pulse-griditems {
  animation: pulse-gridItems var(--animation-duration-flip) infinite;
  /* will-change: transform, border; */
  border: inherit;
}

@keyframes pulse-gridItems {
  0% {
    transform: rotate(-0.75deg);
  }
  25% {
    transform: rotate(0.75deg);
  }
  50% {
    transform: rotate(-0.75deg) scale(1.02);
  }
  75% {
    transform: rotate(-0.75deg);
  }
  100% {
    transform: rotate(0.75deg);
  }
}

/* shine for rotation transition of section .grid-container */
@keyframes shine {
  0% {
    background-size: 10000%;
    background: var(--shine-bg-gradient);
    background-repeat: no-repeat;
    background-position: -50vw;
  }
  100% {
    background-position: 300vw;
  }
}

/* shine for rotation transition of section .grid-container */
@keyframes glow {
  50% {
    opacity: 0.6;
  }
  100% {
    opacity: 0;
  }
}

.active-icon {
  position: absolute;
  height: 10em;
  width: 10em;
  z-index: 999;
  color: rebeccapurple;
  transform-style: preserve-3d;
  will-change: transform;
  transform: translateX(25%) translateY(-50%);
  animation: rotateIcon 500ms linear infinite;
}
svg {
  position: absolute;
  top: inherit;
  left: inherit;
}

svg.active-icon line {
  stroke: rebeccapurple;
  stroke-width: 2;
}

@keyframes rotateIcon {
  from {
    stroke-dashoffset: 10;
  }
  to {
    stroke-dashoffset: 0;
  }
}
